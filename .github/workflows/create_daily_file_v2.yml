name: Create Daily Learning Log

on:
  schedule:
    - cron: '0 5 * * *'  # This will run at midnight CST (5 AM UTC)
  workflow_dispatch:  # Allows manual triggering

jobs:
  create-daily-file:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest changes
        run: git pull origin main

      - name: Set timezone and calculate day number
        run: |
          # Set timezone to CST
          export TZ='America/Chicago'
          
          # Set the start date (Oct 24th as day 1)
          START_DATE="2024-10-24"
          
          # Calculate the day number
          CURRENT_DATE=$(date +%Y-%m-%d)
          DAYS_DIFF=$(( ($(date -d "$CURRENT_DATE" +%s) - $(date -d "$START_DATE" +%s)) / 86400 ))
          DAY_NUMBER=$((DAYS_DIFF + 1))
          
          # Format date and filename
          FORMATTED_DATE=$(date +%Y-%m-%d)
          FILENAME="day_${DAY_NUMBER}.md"
          FOLDER=$(date +%B)
          
          # Create folder if it doesn't exist
          mkdir -p $FOLDER
          
          # Create or update the daily log file
          if [ ! -f "$FOLDER/$FILENAME" ]; then
            # Copy template and replace placeholders
            sed "s/Day X/Day ${DAY_NUMBER}/g; s/\[Date\]/${FORMATTED_DATE}/g" template.md > "$FOLDER/$FILENAME"
            echo "Created new file: $FOLDER/$FILENAME"
          else
            echo "File already exists: $FOLDER/$FILENAME"
            # Optionally touch the file to modify the timestamp
            touch "$FOLDER/$FILENAME"
          fi
          
          # List files for debugging
          ls -l $FOLDER

      - name: Commit changes
        run: |
          echo "Starting commit process..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Automated creation of daily log file for Day ${DAY_NUMBER}"

            # Pull latest changes from remote to avoid push rejection
            git pull --rebase origin main

            # Push changes
            git push
          else
            echo "No changes to commit"
          fi
          echo "Commit process completed."
